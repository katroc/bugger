name: Publish to npm

on:
  release:
    types: [published]

concurrency:
  group: publish-npm
  cancel-in-progress: false

jobs:
  publish:
    name: Publish package
    # Only publish for releases created by release-please bot
    if: github.event_name == 'release' && github.event.release.author.login == 'release-please[bot]'
    runs-on: ubuntu-latest
    permissions:
      contents: read
      id-token: write # for npm provenance with Node 20+
    steps:
      - name: Checkout release tag
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.release.tag_name }}
          fetch-depth: 0

      - name: Use Node.js 20
        uses: actions/setup-node@v4
        with:
          node-version: 20
          registry-url: 'https://registry.npmjs.org'

      - name: Install deps
        run: npm ci

      - name: Build
        run: npm run build

      - name: Check if version already published
        id: check_published
        env:
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
        run: |
          PKG=$(node -p "require('./package.json').name")
          VER=$(node -p "require('./package.json').version")
          echo "Package: $PKG | Version: $VER"
          # Authenticate for npm view if needed
          if [ -n "$NPM_TOKEN" ]; then
            npm config set //registry.npmjs.org/:_authToken=$NPM_TOKEN
          fi
          EXISTS=$(npm view "$PKG" versions --json 2>/dev/null | node -e "let d='';process.stdin.on('data',c=>d+=c);process.stdin.on('end',()=>{try{const a=JSON.parse(d||'[]');console.log(a.includes(process.env.VER)?'yes':'no')}catch{console.log('no')}})" || echo 'no')
          echo "already_published=$EXISTS" >> $GITHUB_OUTPUT

      - name: Verify tag matches package version
        if: github.event_name == 'release'
        run: |
          TAG="${GITHUB_REF_NAME#v}"
          PKG_VERSION=$(node -p "require('./package.json').version")
          echo "Tag: $TAG | package.json: $PKG_VERSION"
          if [ "$TAG" != "$PKG_VERSION" ]; then
            echo "::error::Release tag (v$TAG) does not match package.json version ($PKG_VERSION)"
            exit 1
          fi

      - name: Show current and published versions
        run: |
          PKG=$(node -p "require('./package.json').name")
          VER=$(node -p "require('./package.json').version")
          echo "Package: $PKG | Local version: $VER"
          echo "Registry latest: $(npm view "$PKG" version || echo 'n/a')"

      - name: Publish to npm
        if: steps.check_published.outputs.already_published != 'yes'
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
        run: |
          # Use provenance and public access for OSS packages
          npm publish --provenance --access public

      - name: Skip publish (already published)
        if: steps.check_published.outputs.already_published == 'yes'
        run: echo "Version already published; skipping npm publish."
